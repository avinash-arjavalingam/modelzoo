{
  "swagger": "2.0",
  "info": {
    "title": "protos/services.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/create/model": {
      "post": {
        "operationId": "CreateModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelzooEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelzooModel"
            }
          }
        ],
        "tags": [
          "ModelzooService"
        ]
      }
    },
    "/create/user": {
      "post": {
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelzooEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelzooUser"
            }
          }
        ],
        "tags": [
          "ModelzooService"
        ]
      }
    },
    "/get/models": {
      "post": {
        "summary": "Database",
        "operationId": "ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelzooListModelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelzooEmpty"
            }
          }
        ],
        "tags": [
          "ModelzooService"
        ]
      }
    },
    "/get/token": {
      "post": {
        "summary": "Rate limiting",
        "operationId": "GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelzooRateLimitToken"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelzooEmpty"
            }
          }
        ],
        "tags": [
          "ModelzooService"
        ]
      }
    },
    "/get/user": {
      "post": {
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelzooEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelzooUser"
            }
          }
        ],
        "tags": [
          "ModelzooService"
        ]
      }
    },
    "/inference": {
      "post": {
        "summary": "Inference",
        "operationId": "Inference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelzooPayload"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelzooPayload"
            }
          }
        ],
        "tags": [
          "ModelzooService"
        ]
      }
    }
  },
  "definitions": {
    "MetricItemsMetric": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "TableRow": {
      "type": "object",
      "properties": {
        "column_to_value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "modelzooEmpty": {
      "type": "object",
      "title": "Web"
    },
    "modelzooImage": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "image_data_url": {
          "type": "string"
        },
        "model_name": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        }
      },
      "title": "Image is repsented by the datauri format\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs"
    },
    "modelzooImageDownloadResponse": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        }
      }
    },
    "modelzooKVPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "modelzooListModelsResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelzooModel"
          }
        }
      }
    },
    "modelzooMetricItems": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricItemsMetric"
          }
        }
      }
    },
    "modelzooModel": {
      "type": "object",
      "properties": {
        "model_name": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelzooKVPair"
          }
        }
      }
    },
    "modelzooPayload": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/modelzooPayloadType"
        },
        "image": {
          "$ref": "#/definitions/modelzooImage"
        },
        "text": {
          "$ref": "#/definitions/modelzooText"
        },
        "table": {
          "$ref": "#/definitions/modelzooTable"
        }
      }
    },
    "modelzooPayloadType": {
      "type": "string",
      "enum": [
        "IMAGE",
        "TEXT",
        "TABLE"
      ],
      "default": "IMAGE"
    },
    "modelzooRateLimitToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "modelzooTable": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "model_name": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "table": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TableRow"
          }
        },
        "column_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Table is more complicated.\nIt is inspired from pandas orient=\"index\"\n\u003e\u003e\u003e df.to_json(orient='index')\n'{\"row 1\":{\"col 1\":\"a\",\"col 2\":\"b\"},\"row 2\":{\"col 1\":\"c\",\"col 2\":\"d\"}}'"
    },
    "modelzooText": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "texts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_name": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        }
      },
      "title": "Text is a list of string"
    },
    "modelzooUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
