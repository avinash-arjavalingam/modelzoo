syntax = "proto3";
import "google/api/annotations.proto";

package modelzoo;

import "modelzoo/protos/model_apis.proto";

// Web
message Empty {}

message KVPair {
  string key = 1;
  string value = 2;
}

message Model {
  string model_name = 1;
  repeated KVPair metadata = 3;
}

message User {
  string email = 1;
  string password = 2;
}

message RateLimitToken { string token = 1; }
// message RateLimitExceeded {
//   string token = 1;
//   uint64 quota = 2;
//   google.protobuf.Timestamp restore_at = 3;
// }

message ListModelsResponse { repeated Model models = 1; }

// Downloader
message ImageDownloadRequest { string url = 1; }
message ImageDownloadResponse { string image = 1; }

enum PayloadType {
  IMAGE = 0;
  TEXT = 1;
  TABLE = 2;
}

message Payload {
  PayloadType type = 1;

  oneof payload {
    Image image = 2;
    Text text = 3;
    Table table = 4;
  }
}

message MetricItems {
  message Metric {
    string key = 1;
    string value = 2;
    string unit = 3;
  }

  repeated Metric metrics = 4;
}

service ModelzooService {
  // Inference
  rpc Inference(Payload) returns (Payload) {
    option (google.api.http) = {
      post : "/inference"
      body : "*"
    };
  }

  // Website utils
  rpc GetImage(ImageDownloadRequest) returns (ImageDownloadResponse) {}
  rpc GetMetrics(Empty) returns (MetricItems) {}

  // Rate limiting
  rpc GetToken(Empty) returns (RateLimitToken) {
    option (google.api.http) = {
      post : "/get/token"
      body : "*"
    };
  }

  // Database
  rpc ListModels(Empty) returns (ListModelsResponse) {
    option (google.api.http) = {
      post : "/get/models"
      body : "*"
    };
  }
  rpc CreateUser(User) returns (Empty) {
    option (google.api.http) = {
      post : "/create/user"
      body : "*"
    };
  }
  rpc CreateModel(Model) returns (Empty) {
    option (google.api.http) = {
      post : "/create/model"
      body : "*"
    };
  }
  rpc GetUser(User) returns (Empty) {
    option (google.api.http) = {
      post : "/get/user"
      body : "*"
    };
  }
}
